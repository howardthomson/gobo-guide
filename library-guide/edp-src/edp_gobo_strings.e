--|---------------------------------------------------------|
--| Copyright (c) Howard Thomson 1999,2000,2001,2006		|
--| 52 Ashford Crescent										|
--| Ashford, Middlesex TW15 3EB								|
--| United Kingdom											|
--|---------------------------------------------------------|
expanded class EDP_GOBO_STRINGS

inherit	--insert

	ET_EIFFEL_TOKENS
		export {NONE} all end

	ET_SHARED_TOKEN_CONSTANTS
	KL_SHARED_STRING_EQUALITY_TESTER

feature

	gobo_strings: DS_HASH_TABLE [INTEGER, STRING] is
			-- Strings known by the current scanner, and the associated
			-- hash codes when they are used as identifier
		once
			create Result.make_map (100000)
			Result.set_key_equality_tester (string_equality_tester)
				-- Needed for compatibility with 5.6.0610 (to be removed later):
			Result.force_new (-1, tokens.capitalized_boolean_ref_name)
			Result.force_new (-1, tokens.capitalized_character_ref_name)
			Result.force_new (-1, tokens.capitalized_double_ref_name)
			Result.force_new (-1, tokens.capitalized_integer_ref_name)
			Result.force_new (-1, tokens.capitalized_integer_8_ref_name)
			Result.force_new (-1, tokens.capitalized_integer_16_ref_name)
			Result.force_new (-1, tokens.capitalized_integer_64_ref_name)
			Result.force_new (-1, tokens.capitalized_pointer_ref_name)
			Result.force_new (-1, tokens.capitalized_real_ref_name)
			Result.force_new (-1, tokens.capitalized_wide_character_ref_name)
			Result.force_new (-1, tokens.capitalized_numeric_name)
			Result.force_new (-1, tokens.capitalized_comparable_name)
			Result.force_new (-1, tokens.capitalized_part_comparable_name)
			Result.force_new (-1, tokens.capitalized_hashable_name)
				-- Insert basic strings in `strings'.
			Result.force_new (-1, tokens.builtin_marker)
			Result.force_new (-1, tokens.capitalized_any_name)
			Result.force_new (-1, tokens.capitalized_array_name)
			Result.force_new (-1, tokens.capitalized_bit_name)
			Result.force_new (-1, tokens.capitalized_boolean_name)
			Result.force_new (-1, tokens.capitalized_character_name)
			Result.force_new (-1, tokens.capitalized_double_name)
			Result.force_new (-1, tokens.capitalized_function_name)
			Result.force_new (-1, tokens.capitalized_general_name)
			Result.force_new (-1, tokens.capitalized_integer_name)
			Result.force_new (-1, tokens.capitalized_integer_8_name)
			Result.force_new (-1, tokens.capitalized_integer_16_name)
			Result.force_new (-1, tokens.capitalized_integer_32_name)
			Result.force_new (-1, tokens.capitalized_integer_64_name)
			Result.force_new (-1, tokens.capitalized_natural_name)
			Result.force_new (-1, tokens.capitalized_natural_8_name)
			Result.force_new (-1, tokens.capitalized_natural_16_name)
			Result.force_new (-1, tokens.capitalized_natural_32_name)
			Result.force_new (-1, tokens.capitalized_natural_64_name)
			Result.force_new (-1, tokens.capitalized_none_name)
			Result.force_new (-1, tokens.capitalized_pointer_name)
			Result.force_new (-1, tokens.capitalized_predicate_name)
			Result.force_new (-1, tokens.capitalized_procedure_name)
			Result.force_new (-1, tokens.capitalized_real_name)
			Result.force_new (-1, tokens.capitalized_routine_name)
			Result.force_new (-1, tokens.capitalized_special_name)
			Result.force_new (-1, tokens.capitalized_string_name)
			Result.force_new (-1, tokens.capitalized_tuple_name)
			Result.force_new (-1, tokens.capitalized_type_name)
			Result.force_new (-1, tokens.capitalized_typed_pointer_name)
			Result.force_new (-1, tokens.capitalized_wide_character_name)
			Result.force_new (-1, tokens.capitalized_unknown_name)
			Result.force_new (-1, tokens.area_name)
			Result.force_new (-1, tokens.call_name)
			Result.force_new (-1, tokens.copy_name)
			Result.force_new (-1, tokens.count_name)
			Result.force_new (-1, tokens.default_create_name)
			Result.force_new (-1, tokens.item_name)
			Result.force_new (-1, tokens.last_result_name)
			Result.force_new (-1, tokens.lower_name)
			Result.force_new (-1, tokens.put_name)
			Result.force_new (-1, tokens.put_reference_name)
			Result.force_new (-1, tokens.reference_item_name)
			Result.force_new (-1, tokens.set_operands_name)
			Result.force_new (-1, tokens.twin_name)
			Result.force_new (-1, tokens.upper_name)
			Result.force_new (-1, tokens.capitalized_current_keyword_name)
			Result.force_new (-1, tokens.capitalized_false_keyword_name)
			Result.force_new (-1, tokens.capitalized_precursor_keyword_name)
			Result.force_new (-1, tokens.capitalized_result_keyword_name)
			Result.force_new (-1, tokens.capitalized_true_keyword_name)
			Result.force_new (-1, tokens.capitalized_void_keyword_name)
			Result.force_new (-1, tokens.capitalized_unique_keyword_name)
			Result.force_new (-1, tokens.agent_keyword_name)
			Result.force_new (-1, tokens.alias_keyword_name)
			Result.force_new (-1, tokens.all_keyword_name)
			Result.force_new (-1, tokens.and_keyword_name)
			Result.force_new (-1, tokens.as_keyword_name)
			Result.force_new (-1, tokens.assign_keyword_name)
			Result.force_new (-1, tokens.attribute_keyword_name)
			Result.force_new (-1, tokens.check_keyword_name)
			Result.force_new (-1, tokens.class_keyword_name)
			Result.force_new (-1, tokens.convert_keyword_name)
			Result.force_new (-1, tokens.create_keyword_name)
			Result.force_new (-1, tokens.creation_keyword_name)
			Result.force_new (-1, tokens.current_keyword_name)
			Result.force_new (-1, tokens.debug_keyword_name)
			Result.force_new (-1, tokens.deferred_keyword_name)
			Result.force_new (-1, tokens.do_keyword_name)
			Result.force_new (-1, tokens.else_keyword_name)
			Result.force_new (-1, tokens.elseif_keyword_name)
			Result.force_new (-1, tokens.end_keyword_name)
			Result.force_new (-1, tokens.ensure_keyword_name)
			Result.force_new (-1, tokens.expanded_keyword_name)
			Result.force_new (-1, tokens.export_keyword_name)
			Result.force_new (-1, tokens.external_keyword_name)
			Result.force_new (-1, tokens.false_keyword_name)
			Result.force_new (-1, tokens.feature_keyword_name)
			Result.force_new (-1, tokens.from_keyword_name)
			Result.force_new (-1, tokens.frozen_keyword_name)
			Result.force_new (-1, tokens.if_keyword_name)
			Result.force_new (-1, tokens.implies_keyword_name)
			Result.force_new (-1, tokens.indexing_keyword_name)
			Result.force_new (-1, tokens.infix_keyword_name)
			Result.force_new (-1, tokens.inherit_keyword_name)
			Result.force_new (-1, tokens.inspect_keyword_name)
			Result.force_new (-1, tokens.invariant_keyword_name)
			Result.force_new (-1, tokens.is_keyword_name)
			Result.force_new (-1, tokens.like_keyword_name)
			Result.force_new (-1, tokens.local_keyword_name)
			Result.force_new (-1, tokens.loop_keyword_name)
			Result.force_new (-1, tokens.not_keyword_name)
			Result.force_new (-1, tokens.obsolete_keyword_name)
			Result.force_new (-1, tokens.old_keyword_name)
			Result.force_new (-1, tokens.once_keyword_name)
			Result.force_new (-1, tokens.or_keyword_name)
			Result.force_new (-1, tokens.precursor_keyword_name)
			Result.force_new (-1, tokens.prefix_keyword_name)
			Result.force_new (-1, tokens.redefine_keyword_name)
			Result.force_new (-1, tokens.recast_keyword_name)
			Result.force_new (-1, tokens.reference_keyword_name)
			Result.force_new (-1, tokens.rename_keyword_name)
			Result.force_new (-1, tokens.require_keyword_name)
			Result.force_new (-1, tokens.rescue_keyword_name)
			Result.force_new (-1, tokens.result_keyword_name)
			Result.force_new (-1, tokens.retry_keyword_name)
			Result.force_new (-1, tokens.select_keyword_name)
			Result.force_new (-1, tokens.separate_keyword_name)
			Result.force_new (-1, tokens.strip_keyword_name)
			Result.force_new (-1, tokens.then_keyword_name)
			Result.force_new (-1, tokens.true_keyword_name)
			Result.force_new (-1, tokens.undefine_keyword_name)
			Result.force_new (-1, tokens.unique_keyword_name)
			Result.force_new (-1, tokens.until_keyword_name)
			Result.force_new (-1, tokens.variant_keyword_name)
			Result.force_new (-1, tokens.void_keyword_name)
			Result.force_new (-1, tokens.when_keyword_name)
			Result.force_new (-1, tokens.xor_keyword_name)
			Result.force_new (-1, tokens.arrow_symbol_name)
			Result.force_new (-1, tokens.assign_symbol_name)
			Result.force_new (-1, tokens.assign_attempt_symbol_name)
			Result.force_new (-1, tokens.at_symbol_name)
			Result.force_new (-1, tokens.bang_symbol_name)
			Result.force_new (-1, tokens.colon_symbol_name)
			Result.force_new (-1, tokens.comma_symbol_name)
			Result.force_new (-1, tokens.div_symbol_name)
			Result.force_new (-1, tokens.divide_symbol_name)
			Result.force_new (-1, tokens.dollar_symbol_name)
			Result.force_new (-1, tokens.dot_symbol_name)
			Result.force_new (-1, tokens.dotdot_symbol_name)
			Result.force_new (-1, tokens.equal_symbol_name)
			Result.force_new (-1, tokens.ge_symbol_name)
			Result.force_new (-1, tokens.gt_symbol_name)
			Result.force_new (-1, tokens.le_symbol_name)
			Result.force_new (-1, tokens.left_array_symbol_name)
			Result.force_new (-1, tokens.left_brace_symbol_name)
			Result.force_new (-1, tokens.left_bracket_symbol_name)
			Result.force_new (-1, tokens.left_parenthesis_symbol_name)
			Result.force_new (-1, tokens.lt_symbol_name)
			Result.force_new (-1, tokens.minus_symbol_name)
			Result.force_new (-1, tokens.mod_symbol_name)
			Result.force_new (-1, tokens.not_equal_symbol_name)
			Result.force_new (-1, tokens.plus_symbol_name)
			Result.force_new (-1, tokens.power_symbol_name)
			Result.force_new (-1, tokens.question_mark_symbol_name)
			Result.force_new (-1, tokens.right_array_symbol_name)
			Result.force_new (-1, tokens.right_brace_symbol_name)
			Result.force_new (-1, tokens.right_bracket_symbol_name)
			Result.force_new (-1, tokens.right_parenthesis_symbol_name)
			Result.force_new (-1, tokens.semicolon_symbol_name)
			Result.force_new (-1, tokens.tilde_symbol_name)
			Result.force_new (-1, tokens.times_symbol_name)
		ensure
			strings_not_void: Result /= Void
			no_void_string: not Result.has (Void)
		end

end